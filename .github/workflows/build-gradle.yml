name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      database:
        image: mariadb:11.6
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_USER: mariadb
          MARIADB_PASSWORD: mariadb
          MARIADB_DATABASE: aml
        ports:
          - 13306:3306
      mail:
        image: rnwood/smtp4dev
        ports:
          - 5000:80
          - 2525:25

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: "Store test results"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: "Test Reports"
          path: build/reports
          retention-days: 7

  get-version:
    name: "Get version"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4
      - name: Get the current version
        id: get_version
        run: |
          version=$(grep -E '^version=' gradle.properties | cut -d'=' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

  check-version-exists:
    name: "Check if version exists"
    runs-on: ubuntu-latest
    needs: [get-version]
    environment: Production

    steps:
      - name: Check if the version already exists
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            if [ -d "/home/${{ secrets.SERVER_USERNAME }}/app/${{ needs.get-version.outputs.version }}" ]; then exit 1; fi

  dependency-submission:

    name: "Generate and submit dependency graph"
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
